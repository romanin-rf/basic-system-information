from kivy.uix.boxlayout import BoxLayout
from kivy.uix.gridlayout import GridLayout
from kivy.uix.widget import Widget
from typing import Iterable, List, Optional, Any, Union
# * Local Imports
try:
    from . import Units as units
except:
    import Units as units

# ! Constants
By = units.By()

# ! Functions
def _gt(widget: Widget) -> str: ...

# ! Main Class
class Table(BoxLayout):
    сolumns: List[str]
    max_сolumns: int
    rows_list: List[Iterable[Widget]]
    table_obj: GridLayout
    
    def __init__(self, сolumns: Iterable[str], **kwargs) -> None: ...
    def get_colomn_index(self, сolumn_name: Optional[str]) -> Optional[int]: ...
    def add_row(self, data: Iterable[Widget], *, ignore_errors: bool=True) -> None: ...
    def add_row_text(self, data: Iterable[str], **kwargs) -> None: ...
    def add_row_alternative(self, data: Iterable[Union[Widget, Any]], **kwargs) -> None: ...
    def search_row(self, by: units._By=By.COLOMN_NAME_AND_TEXT, **kwargs) -> Optional[List[Widget]]: ...
    def search_rows(self, by: units._By=By.COLOMN_NAME_AND_TEXT, **kwargs) -> List[List[Widget]]: ...
    def search_row_text(self, by: units._By=By.COLOMN_NAME_AND_TEXT, **kwargs) -> Optional[List[str]]: ...
    def search_rows_text(self, by: units._By=By.COLOMN_NAME_AND_TEXT, **kwargs) -> List[List[str]]: ...
    def delete_row(self, by: units._By=By.COLOMN_NAME_AND_TEXT, **kwargs) -> List[List[str]]: ...
    def delete_rows(self, by: units._By=By.COLOMN_NAME_AND_TEXT, **kwargs) -> None: ...
